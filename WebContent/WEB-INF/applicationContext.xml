<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">

	<context:annotation-config />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<mvc:resources location="/resources/" mapping="/resources/**"
		cache-period="5000" />

	<context:component-scan base-package="angularjs_spring_mvc.dao" />
	<context:component-scan base-package="angularjs_spring_mvc.controller" />


	<!-- Data Source -->
	<bean id="springDataSource" name="springDataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="false">
		<property name="jndiName">
			<value>java:comp/env/jdbc/datasouce</value>
		</property>
	</bean>


	<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate"
		lazy-init="false">
		<property name="dataSource" ref="springDataSource" />
		<property name="baselineOnMigrate" value="true" />
		<property name="table" value="version" /> <!-- nome da tabela criada -->
		<property name="sqlMigrationPrefix" value="v" /> <!-- prefixo dos arquivos -->
		<property name="sqlMigrationSeparator" value="_" />
		<property name="encoding" value="ISO-8859-1" />
		<property name="validateOnMigrate" value="false" />
	</bean>


	<bean id="transactionManager" name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		lazy-init="false">
		<property name="dataSource" ref="springDataSource" />
	</bean>

	<bean id="clienteController" name="clienteController"
		class="angularjs_spring_mvc.controller.ClienteController">
		<constructor-arg value="angularjs_spring_mvc.model.Cliente" />
	</bean>


	<bean id="estadosController" name="estadosController"
		class="angularjs_spring_mvc.controller.EstadosController">
		<constructor-arg value="angularjs_spring_mvc.model.Estados" />
	</bean>

	<bean id="cidadesController" name="cidadesController"
		class="angularjs_spring_mvc.controller.CidadesController">
		<constructor-arg value="angularjs_spring_mvc.model.Cidades" />
	</bean>

	<bean id="fornecedorController" name="fornecedorController"
		class="angularjs_spring_mvc.controller.FornecedorController">
		<constructor-arg value="angularjs_spring_mvc.model.Fornecedor" />
	</bean>

	<bean id="livroController" name="livroController"
		class="angularjs_spring_mvc.controller.LivroController">
		<constructor-arg value="angularjs_spring_mvc.model.Livro" />
	</bean>

<!-- 	<bean id="itemPedidoController" name="itemPedidoController" -->
<!-- 		class="curso.angular.controller.ItemPedidoController"> -->
<!-- 		<constructor-arg value="curso.angular.model.ItemPedido" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="pedidoController" name="pedidoController" -->
<!-- 		class="curso.angular.controller.PedidoController"> -->
<!-- 		<constructor-arg value="curso.angular.model.Pedido" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="fileDownloadController" name="fileDownloadController" -->
<!-- 		class="curso.angular.controller.FileDownloadController"> -->
<!-- 	</bean> -->

<!-- 	<bean id="reportUtil" name="reportUtil" class="curso.angular.controller.ReportUtil"> -->
<!-- 	</bean> -->

</beans>

